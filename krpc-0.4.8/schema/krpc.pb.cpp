// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/krpc.proto

#include "krpc/krpc.pb.hpp"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "krpc/krpc.pb.hpp"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protobuf_2fkrpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Argument;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Class;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DictionaryEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EnumerationValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Exception;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Stream;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Enumeration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureCall;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StreamResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StreamUpdate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Procedure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Response;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2fkrpc_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Service;
}  // namespace protobuf_protobuf_2fkrpc_2eproto
namespace krpc {
namespace schema {
class ConnectionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionRequest>
      _instance;
} _ConnectionRequest_default_instance_;
class ConnectionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionResponse>
      _instance;
} _ConnectionResponse_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ProcedureCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureCall>
      _instance;
} _ProcedureCall_default_instance_;
class ArgumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Argument>
      _instance;
} _Argument_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class ProcedureResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureResult>
      _instance;
} _ProcedureResult_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class StreamUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamUpdate>
      _instance;
} _StreamUpdate_default_instance_;
class StreamResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamResult>
      _instance;
} _StreamResult_default_instance_;
class ServicesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Services>
      _instance;
} _Services_default_instance_;
class ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service>
      _instance;
} _Service_default_instance_;
class ProcedureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Procedure>
      _instance;
} _Procedure_default_instance_;
class ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameter>
      _instance;
} _Parameter_default_instance_;
class ClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Class>
      _instance;
} _Class_default_instance_;
class EnumerationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Enumeration>
      _instance;
} _Enumeration_default_instance_;
class EnumerationValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumerationValue>
      _instance;
} _EnumerationValue_default_instance_;
class ExceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Exception>
      _instance;
} _Exception_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
} _Type_default_instance_;
class TupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tuple>
      _instance;
} _Tuple_default_instance_;
class ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<List>
      _instance;
} _List_default_instance_;
class SetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Set>
      _instance;
} _Set_default_instance_;
class DictionaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dictionary>
      _instance;
} _Dictionary_default_instance_;
class DictionaryEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DictionaryEntry>
      _instance;
} _DictionaryEntry_default_instance_;
class StreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stream>
      _instance;
} _Stream_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Status>
      _instance;
} _Status_default_instance_;
class MultiplexedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiplexedRequest>
      _instance;
} _MultiplexedRequest_default_instance_;
class MultiplexedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiplexedResponse>
      _instance;
} _MultiplexedResponse_default_instance_;
}  // namespace schema
}  // namespace krpc
namespace protobuf_protobuf_2fkrpc_2eproto {
static void InitDefaultsConnectionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_ConnectionRequest_default_instance_;
    new (ptr) ::krpc::schema::ConnectionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::ConnectionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionRequest}, {}};

static void InitDefaultsConnectionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_ConnectionResponse_default_instance_;
    new (ptr) ::krpc::schema::ConnectionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::ConnectionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionResponse}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Request_default_instance_;
    new (ptr) ::krpc::schema::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequest}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureCall.base,}};

static void InitDefaultsProcedureCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_ProcedureCall_default_instance_;
    new (ptr) ::krpc::schema::ProcedureCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::ProcedureCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureCall =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureCall}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Argument.base,}};

static void InitDefaultsArgument() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Argument_default_instance_;
    new (ptr) ::krpc::schema::Argument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Argument::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Argument =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArgument}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Response_default_instance_;
    new (ptr) ::krpc::schema::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResponse}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Error.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureResult.base,}};

static void InitDefaultsProcedureResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_ProcedureResult_default_instance_;
    new (ptr) ::krpc::schema::ProcedureResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::ProcedureResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureResult}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Error.base,}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Error_default_instance_;
    new (ptr) ::krpc::schema::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsError}, {}};

static void InitDefaultsStreamUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_StreamUpdate_default_instance_;
    new (ptr) ::krpc::schema::StreamUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::StreamUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StreamUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStreamUpdate}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamResult.base,}};

static void InitDefaultsStreamResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_StreamResult_default_instance_;
    new (ptr) ::krpc::schema::StreamResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::StreamResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StreamResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStreamResult}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureResult.base,}};

static void InitDefaultsServices() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Services_default_instance_;
    new (ptr) ::krpc::schema::Services();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Services::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Services =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServices}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Service.base,}};

static void InitDefaultsService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Service_default_instance_;
    new (ptr) ::krpc::schema::Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Service::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Service =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsService}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Procedure.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Class.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Enumeration.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Exception.base,}};

static void InitDefaultsProcedure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Procedure_default_instance_;
    new (ptr) ::krpc::schema::Procedure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Procedure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Procedure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProcedure}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Parameter.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Type.base,}};

static void InitDefaultsParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Parameter_default_instance_;
    new (ptr) ::krpc::schema::Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParameter}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Type.base,}};

static void InitDefaultsClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Class_default_instance_;
    new (ptr) ::krpc::schema::Class();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Class::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Class =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClass}, {}};

static void InitDefaultsEnumeration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Enumeration_default_instance_;
    new (ptr) ::krpc::schema::Enumeration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Enumeration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Enumeration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnumeration}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_EnumerationValue.base,}};

static void InitDefaultsEnumerationValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_EnumerationValue_default_instance_;
    new (ptr) ::krpc::schema::EnumerationValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::EnumerationValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnumerationValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnumerationValue}, {}};

static void InitDefaultsException() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Exception_default_instance_;
    new (ptr) ::krpc::schema::Exception();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Exception::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Exception =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsException}, {}};

static void InitDefaultsType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Type_default_instance_;
    new (ptr) ::krpc::schema::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType}, {}};

static void InitDefaultsTuple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Tuple_default_instance_;
    new (ptr) ::krpc::schema::Tuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Tuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tuple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTuple}, {}};

static void InitDefaultsList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_List_default_instance_;
    new (ptr) ::krpc::schema::List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::List::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_List =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsList}, {}};

static void InitDefaultsSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Set_default_instance_;
    new (ptr) ::krpc::schema::Set();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Set::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Set =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSet}, {}};

static void InitDefaultsDictionary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Dictionary_default_instance_;
    new (ptr) ::krpc::schema::Dictionary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Dictionary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Dictionary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDictionary}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_DictionaryEntry.base,}};

static void InitDefaultsDictionaryEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_DictionaryEntry_default_instance_;
    new (ptr) ::krpc::schema::DictionaryEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::DictionaryEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DictionaryEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDictionaryEntry}, {}};

static void InitDefaultsStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Stream_default_instance_;
    new (ptr) ::krpc::schema::Stream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Stream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Stream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStream}, {}};

static void InitDefaultsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Event_default_instance_;
    new (ptr) ::krpc::schema::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvent}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Stream.base,}};

static void InitDefaultsStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_Status_default_instance_;
    new (ptr) ::krpc::schema::Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatus}, {}};

static void InitDefaultsMultiplexedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_MultiplexedRequest_default_instance_;
    new (ptr) ::krpc::schema::MultiplexedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::MultiplexedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MultiplexedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMultiplexedRequest}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ConnectionRequest.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Request.base,}};

static void InitDefaultsMultiplexedResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::krpc::schema::_MultiplexedResponse_default_instance_;
    new (ptr) ::krpc::schema::MultiplexedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::krpc::schema::MultiplexedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MultiplexedResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMultiplexedResponse}, {
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Response.base,
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamUpdate.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureCall.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Argument.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Services.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Procedure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Class.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Enumeration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnumerationValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Exception.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tuple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_List.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Set.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dictionary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DictionaryEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Stream.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiplexedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiplexedResponse.base);
}

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionRequest, client_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionRequest, client_identifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ConnectionResponse, client_identifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Request, calls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, procedure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, service_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, procedure_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureCall, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Argument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Argument, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Argument, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Response, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Response, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureResult, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::ProcedureResult, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Error, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Error, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Error, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Error, stack_trace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::StreamUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::StreamUpdate, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::StreamResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::StreamResult, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::StreamResult, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Services, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Services, services_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, procedures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, enumerations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, exceptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Service, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, return_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, return_is_nullable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, game_scenes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Procedure, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Parameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Parameter, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Parameter, default_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Class, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Class, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Class, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Enumeration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Enumeration, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Enumeration, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Enumeration, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::EnumerationValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::EnumerationValue, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::EnumerationValue, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::EnumerationValue, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Exception, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Exception, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Exception, documentation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Type, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Type, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Type, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Type, types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Tuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Tuple, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::List, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Set, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Dictionary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Dictionary, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::DictionaryEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::DictionaryEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::DictionaryEntry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Stream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Stream, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Event, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, bytes_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, bytes_written_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, bytes_read_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, bytes_written_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, rpcs_executed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, rpc_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, one_rpc_per_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, max_time_per_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, adaptive_rate_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, blocking_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, recv_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, time_per_rpc_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, poll_time_per_rpc_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, exec_time_per_rpc_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, stream_rpcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, stream_rpcs_executed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, stream_rpc_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::Status, time_per_stream_update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedRequest, connection_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::krpc::schema::MultiplexedResponse, stream_update_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::krpc::schema::ConnectionRequest)},
  { 8, -1, sizeof(::krpc::schema::ConnectionResponse)},
  { 16, -1, sizeof(::krpc::schema::Request)},
  { 22, -1, sizeof(::krpc::schema::ProcedureCall)},
  { 32, -1, sizeof(::krpc::schema::Argument)},
  { 39, -1, sizeof(::krpc::schema::Response)},
  { 46, -1, sizeof(::krpc::schema::ProcedureResult)},
  { 53, -1, sizeof(::krpc::schema::Error)},
  { 62, -1, sizeof(::krpc::schema::StreamUpdate)},
  { 68, -1, sizeof(::krpc::schema::StreamResult)},
  { 75, -1, sizeof(::krpc::schema::Services)},
  { 81, -1, sizeof(::krpc::schema::Service)},
  { 92, -1, sizeof(::krpc::schema::Procedure)},
  { 103, -1, sizeof(::krpc::schema::Parameter)},
  { 111, -1, sizeof(::krpc::schema::Class)},
  { 118, -1, sizeof(::krpc::schema::Enumeration)},
  { 126, -1, sizeof(::krpc::schema::EnumerationValue)},
  { 134, -1, sizeof(::krpc::schema::Exception)},
  { 141, -1, sizeof(::krpc::schema::Type)},
  { 150, -1, sizeof(::krpc::schema::Tuple)},
  { 156, -1, sizeof(::krpc::schema::List)},
  { 162, -1, sizeof(::krpc::schema::Set)},
  { 168, -1, sizeof(::krpc::schema::Dictionary)},
  { 174, -1, sizeof(::krpc::schema::DictionaryEntry)},
  { 181, -1, sizeof(::krpc::schema::Stream)},
  { 187, -1, sizeof(::krpc::schema::Event)},
  { 193, -1, sizeof(::krpc::schema::Status)},
  { 217, -1, sizeof(::krpc::schema::MultiplexedRequest)},
  { 224, -1, sizeof(::krpc::schema::MultiplexedResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_ConnectionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_ConnectionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_ProcedureCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Argument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_ProcedureResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_StreamUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_StreamResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Services_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Service_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Procedure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Class_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Enumeration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_EnumerationValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Exception_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Tuple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Set_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Dictionary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_DictionaryEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Stream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_MultiplexedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::krpc::schema::_MultiplexedResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protobuf/krpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023protobuf/krpc.proto\022\013krpc.schema\"\223\001\n\021C"
      "onnectionRequest\0221\n\004type\030\001 \001(\0162#.krpc.sc"
      "hema.ConnectionRequest.Type\022\023\n\013client_na"
      "me\030\002 \001(\t\022\031\n\021client_identifier\030\003 \001(\014\"\033\n\004T"
      "ype\022\007\n\003RPC\020\000\022\n\n\006STREAM\020\001\"\276\001\n\022ConnectionR"
      "esponse\0226\n\006status\030\001 \001(\0162&.krpc.schema.Co"
      "nnectionResponse.Status\022\017\n\007message\030\002 \001(\t"
      "\022\031\n\021client_identifier\030\003 \001(\014\"D\n\006Status\022\006\n"
      "\002OK\020\000\022\025\n\021MALFORMED_MESSAGE\020\001\022\013\n\007TIMEOUT\020"
      "\002\022\016\n\nWRONG_TYPE\020\003\"4\n\007Request\022)\n\005calls\030\001 "
      "\003(\0132\032.krpc.schema.ProcedureCall\"\207\001\n\rProc"
      "edureCall\022\017\n\007service\030\001 \001(\t\022\021\n\tprocedure\030"
      "\002 \001(\t\022\022\n\nservice_id\030\004 \001(\r\022\024\n\014procedure_i"
      "d\030\005 \001(\r\022(\n\targuments\030\003 \003(\0132\025.krpc.schema"
      ".Argument\"+\n\010Argument\022\020\n\010position\030\001 \001(\r\022"
      "\r\n\005value\030\002 \001(\014\"\\\n\010Response\022!\n\005error\030\001 \001("
      "\0132\022.krpc.schema.Error\022-\n\007results\030\002 \003(\0132\034"
      ".krpc.schema.ProcedureResult\"C\n\017Procedur"
      "eResult\022!\n\005error\030\001 \001(\0132\022.krpc.schema.Err"
      "or\022\r\n\005value\030\002 \001(\014\"P\n\005Error\022\017\n\007service\030\001 "
      "\001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\023"
      "\n\013stack_trace\030\004 \001(\t\":\n\014StreamUpdate\022*\n\007r"
      "esults\030\001 \003(\0132\031.krpc.schema.StreamResult\""
      "H\n\014StreamResult\022\n\n\002id\030\001 \001(\004\022,\n\006result\030\002 "
      "\001(\0132\034.krpc.schema.ProcedureResult\"2\n\010Ser"
      "vices\022&\n\010services\030\001 \003(\0132\024.krpc.schema.Se"
      "rvice\"\333\001\n\007Service\022\014\n\004name\030\001 \001(\t\022*\n\nproce"
      "dures\030\002 \003(\0132\026.krpc.schema.Procedure\022#\n\007c"
      "lasses\030\003 \003(\0132\022.krpc.schema.Class\022.\n\014enum"
      "erations\030\004 \003(\0132\030.krpc.schema.Enumeration"
      "\022*\n\nexceptions\030\005 \003(\0132\026.krpc.schema.Excep"
      "tion\022\025\n\rdocumentation\030\006 \001(\t\"\315\002\n\tProcedur"
      "e\022\014\n\004name\030\001 \001(\t\022*\n\nparameters\030\002 \003(\0132\026.kr"
      "pc.schema.Parameter\022&\n\013return_type\030\003 \001(\013"
      "2\021.krpc.schema.Type\022\032\n\022return_is_nullabl"
      "e\030\004 \001(\010\0225\n\013game_scenes\030\006 \003(\0162 .krpc.sche"
      "ma.Procedure.GameScene\022\025\n\rdocumentation\030"
      "\005 \001(\t\"t\n\tGameScene\022\020\n\014SPACE_CENTER\020\000\022\n\n\006"
      "FLIGHT\020\001\022\024\n\020TRACKING_STATION\020\002\022\016\n\nEDITOR"
      "_VAB\020\003\022\016\n\nEDITOR_SPH\020\004\022\023\n\017MISSION_BUILDE"
      "R\020\005\"Q\n\tParameter\022\014\n\004name\030\001 \001(\t\022\037\n\004type\030\002"
      " \001(\0132\021.krpc.schema.Type\022\025\n\rdefault_value"
      "\030\003 \001(\014\",\n\005Class\022\014\n\004name\030\001 \001(\t\022\025\n\rdocumen"
      "tation\030\002 \001(\t\"a\n\013Enumeration\022\014\n\004name\030\001 \001("
      "\t\022-\n\006values\030\002 \003(\0132\035.krpc.schema.Enumerat"
      "ionValue\022\025\n\rdocumentation\030\003 \001(\t\"F\n\020Enume"
      "rationValue\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\005"
      "\022\025\n\rdocumentation\030\003 \001(\t\"0\n\tException\022\014\n\004"
      "name\030\001 \001(\t\022\025\n\rdocumentation\030\002 \001(\t\"\210\003\n\004Ty"
      "pe\022(\n\004code\030\001 \001(\0162\032.krpc.schema.Type.Type"
      "Code\022\017\n\007service\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022 \n\005t"
      "ypes\030\004 \003(\0132\021.krpc.schema.Type\"\224\002\n\010TypeCo"
      "de\022\010\n\004NONE\020\000\022\n\n\006DOUBLE\020\001\022\t\n\005FLOAT\020\002\022\n\n\006S"
      "INT32\020\003\022\n\n\006SINT64\020\004\022\n\n\006UINT32\020\005\022\n\n\006UINT6"
      "4\020\006\022\010\n\004BOOL\020\007\022\n\n\006STRING\020\010\022\t\n\005BYTES\020\t\022\t\n\005"
      "CLASS\020d\022\017\n\013ENUMERATION\020e\022\n\n\005EVENT\020\310\001\022\023\n\016"
      "PROCEDURE_CALL\020\311\001\022\013\n\006STREAM\020\312\001\022\013\n\006STATUS"
      "\020\313\001\022\r\n\010SERVICES\020\314\001\022\n\n\005TUPLE\020\254\002\022\t\n\004LIST\020\255"
      "\002\022\010\n\003SET\020\256\002\022\017\n\nDICTIONARY\020\257\002\"\026\n\005Tuple\022\r\n"
      "\005items\030\001 \003(\014\"\025\n\004List\022\r\n\005items\030\001 \003(\014\"\024\n\003S"
      "et\022\r\n\005items\030\001 \003(\014\";\n\nDictionary\022-\n\007entri"
      "es\030\001 \003(\0132\034.krpc.schema.DictionaryEntry\"-"
      "\n\017DictionaryEntry\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030"
      "\002 \001(\014\"\024\n\006Stream\022\n\n\002id\030\001 \001(\004\",\n\005Event\022#\n\006"
      "stream\030\001 \001(\0132\023.krpc.schema.Stream\"\364\003\n\006St"
      "atus\022\017\n\007version\030\001 \001(\t\022\022\n\nbytes_read\030\002 \001("
      "\004\022\025\n\rbytes_written\030\003 \001(\004\022\027\n\017bytes_read_r"
      "ate\030\004 \001(\002\022\032\n\022bytes_written_rate\030\005 \001(\002\022\025\n"
      "\rrpcs_executed\030\006 \001(\004\022\020\n\010rpc_rate\030\007 \001(\002\022\032"
      "\n\022one_rpc_per_update\030\010 \001(\010\022\033\n\023max_time_p"
      "er_update\030\t \001(\r\022\035\n\025adaptive_rate_control"
      "\030\n \001(\010\022\025\n\rblocking_recv\030\013 \001(\010\022\024\n\014recv_ti"
      "meout\030\014 \001(\r\022\033\n\023time_per_rpc_update\030\r \001(\002"
      "\022 \n\030poll_time_per_rpc_update\030\016 \001(\002\022 \n\030ex"
      "ec_time_per_rpc_update\030\017 \001(\002\022\023\n\013stream_r"
      "pcs\030\020 \001(\r\022\034\n\024stream_rpcs_executed\030\021 \001(\004\022"
      "\027\n\017stream_rpc_rate\030\022 \001(\002\022\036\n\026time_per_str"
      "eam_update\030\023 \001(\002\"w\n\022MultiplexedRequest\022:"
      "\n\022connection_request\030\001 \001(\0132\036.krpc.schema"
      ".ConnectionRequest\022%\n\007request\030\002 \001(\0132\024.kr"
      "pc.schema.Request\"p\n\023MultiplexedResponse"
      "\022\'\n\010response\030\001 \001(\0132\025.krpc.schema.Respons"
      "e\0220\n\rstream_update\030\002 \001(\0132\031.krpc.schema.S"
      "treamUpdateB-\n\013krpc.schemaB\004KRPC\242\002\004KRPC\252"
      "\002\020KRPC.Schema.KRPCb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3386);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/krpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobuf_2fkrpc_2eproto
namespace krpc {
namespace schema {
const ::google::protobuf::EnumDescriptor* ConnectionRequest_Type_descriptor() {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2fkrpc_2eproto::file_level_enum_descriptors[0];
}
bool ConnectionRequest_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConnectionRequest_Type ConnectionRequest::RPC;
const ConnectionRequest_Type ConnectionRequest::STREAM;
const ConnectionRequest_Type ConnectionRequest::Type_MIN;
const ConnectionRequest_Type ConnectionRequest::Type_MAX;
const int ConnectionRequest::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ConnectionResponse_Status_descriptor() {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2fkrpc_2eproto::file_level_enum_descriptors[1];
}
bool ConnectionResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConnectionResponse_Status ConnectionResponse::OK;
const ConnectionResponse_Status ConnectionResponse::MALFORMED_MESSAGE;
const ConnectionResponse_Status ConnectionResponse::TIMEOUT;
const ConnectionResponse_Status ConnectionResponse::WRONG_TYPE;
const ConnectionResponse_Status ConnectionResponse::Status_MIN;
const ConnectionResponse_Status ConnectionResponse::Status_MAX;
const int ConnectionResponse::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Procedure_GameScene_descriptor() {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2fkrpc_2eproto::file_level_enum_descriptors[2];
}
bool Procedure_GameScene_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Procedure_GameScene Procedure::SPACE_CENTER;
const Procedure_GameScene Procedure::FLIGHT;
const Procedure_GameScene Procedure::TRACKING_STATION;
const Procedure_GameScene Procedure::EDITOR_VAB;
const Procedure_GameScene Procedure::EDITOR_SPH;
const Procedure_GameScene Procedure::MISSION_BUILDER;
const Procedure_GameScene Procedure::GameScene_MIN;
const Procedure_GameScene Procedure::GameScene_MAX;
const int Procedure::GameScene_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Type_TypeCode_descriptor() {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2fkrpc_2eproto::file_level_enum_descriptors[3];
}
bool Type_TypeCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 100:
    case 101:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 300:
    case 301:
    case 302:
    case 303:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_TypeCode Type::NONE;
const Type_TypeCode Type::DOUBLE;
const Type_TypeCode Type::FLOAT;
const Type_TypeCode Type::SINT32;
const Type_TypeCode Type::SINT64;
const Type_TypeCode Type::UINT32;
const Type_TypeCode Type::UINT64;
const Type_TypeCode Type::BOOL;
const Type_TypeCode Type::STRING;
const Type_TypeCode Type::BYTES;
const Type_TypeCode Type::CLASS;
const Type_TypeCode Type::ENUMERATION;
const Type_TypeCode Type::EVENT;
const Type_TypeCode Type::PROCEDURE_CALL;
const Type_TypeCode Type::STREAM;
const Type_TypeCode Type::STATUS;
const Type_TypeCode Type::SERVICES;
const Type_TypeCode Type::TUPLE;
const Type_TypeCode Type::LIST;
const Type_TypeCode Type::SET;
const Type_TypeCode Type::DICTIONARY;
const Type_TypeCode Type::TypeCode_MIN;
const Type_TypeCode Type::TypeCode_MAX;
const int Type::TypeCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ConnectionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionRequest::kTypeFieldNumber;
const int ConnectionRequest::kClientNameFieldNumber;
const int ConnectionRequest::kClientIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionRequest::ConnectionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ConnectionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.ConnectionRequest)
}
ConnectionRequest::ConnectionRequest(const ConnectionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_name().size() > 0) {
    client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_);
  }
  client_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_identifier().size() > 0) {
    client_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_identifier_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.ConnectionRequest)
}

void ConnectionRequest::SharedCtor() {
  client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ConnectionRequest::~ConnectionRequest() {
  // @@protoc_insertion_point(destructor:krpc.schema.ConnectionRequest)
  SharedDtor();
}

void ConnectionRequest::SharedDtor() {
  client_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionRequest::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionRequest& ConnectionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_ConnectionRequest.base);
  return *internal_default_instance();
}


void ConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.ConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.ConnectionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.ConnectionRequest.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::krpc::schema::ConnectionRequest_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_name().data(), static_cast<int>(this->client_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.ConnectionRequest.client_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_identifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.ConnectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.ConnectionRequest)
  return false;
#undef DO_
}

void ConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.ConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionRequest.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string client_name = 2;
  if (this->client_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_name().data(), static_cast<int>(this->client_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ConnectionRequest.client_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_name(), output);
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->client_identifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.ConnectionRequest)
}

::google::protobuf::uint8* ConnectionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.ConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionRequest.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string client_name = 2;
  if (this->client_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_name().data(), static_cast<int>(this->client_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ConnectionRequest.client_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_name(), target);
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->client_identifier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.ConnectionRequest)
  return target;
}

size_t ConnectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.ConnectionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_name = 2;
  if (this->client_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_name());
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_identifier());
  }

  // .krpc.schema.ConnectionRequest.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.ConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.ConnectionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.ConnectionRequest)
    MergeFrom(*source);
  }
}

void ConnectionRequest::MergeFrom(const ConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.ConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_name().size() > 0) {

    client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_);
  }
  if (from.client_identifier().size() > 0) {

    client_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_identifier_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.ConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionRequest::CopyFrom(const ConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.ConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionRequest::IsInitialized() const {
  return true;
}

void ConnectionRequest::Swap(ConnectionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionRequest::InternalSwap(ConnectionRequest* other) {
  using std::swap;
  client_name_.Swap(&other->client_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_identifier_.Swap(&other->client_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionRequest::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionResponse::kStatusFieldNumber;
const int ConnectionResponse::kMessageFieldNumber;
const int ConnectionResponse::kClientIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionResponse::ConnectionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ConnectionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.ConnectionResponse)
}
ConnectionResponse::ConnectionResponse(const ConnectionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  client_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_identifier().size() > 0) {
    client_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_identifier_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.ConnectionResponse)
}

void ConnectionResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

ConnectionResponse::~ConnectionResponse() {
  // @@protoc_insertion_point(destructor:krpc.schema.ConnectionResponse)
  SharedDtor();
}

void ConnectionResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionResponse::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionResponse& ConnectionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_ConnectionResponse.base);
  return *internal_default_instance();
}


void ConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.ConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.ConnectionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.ConnectionResponse.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::krpc::schema::ConnectionResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.ConnectionResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_identifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.ConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.ConnectionResponse)
  return false;
#undef DO_
}

void ConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.ConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionResponse.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ConnectionResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->client_identifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.ConnectionResponse)
}

::google::protobuf::uint8* ConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.ConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionResponse.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ConnectionResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->client_identifier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.ConnectionResponse)
  return target;
}

size_t ConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.ConnectionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bytes client_identifier = 3;
  if (this->client_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_identifier());
  }

  // .krpc.schema.ConnectionResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.ConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.ConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.ConnectionResponse)
    MergeFrom(*source);
  }
}

void ConnectionResponse::MergeFrom(const ConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.ConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.client_identifier().size() > 0) {

    client_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_identifier_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ConnectionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.ConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionResponse::CopyFrom(const ConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.ConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionResponse::IsInitialized() const {
  return true;
}

void ConnectionResponse::Swap(ConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionResponse::InternalSwap(ConnectionResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_identifier_.Swap(&other->client_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionResponse::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      calls_(from.calls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Request)
}

void Request::SharedCtor() {
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:krpc.schema.Request)
  SharedDtor();
}

void Request::SharedDtor() {
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  calls_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .krpc.schema.ProcedureCall calls = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.ProcedureCall calls = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->calls(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.ProcedureCall calls = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->calls(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.ProcedureCall calls = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->calls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->calls(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  calls_.MergeFrom(from.calls_);
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  CastToBase(&calls_)->InternalSwap(CastToBase(&other->calls_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureCall::kServiceFieldNumber;
const int ProcedureCall::kProcedureFieldNumber;
const int ProcedureCall::kServiceIdFieldNumber;
const int ProcedureCall::kProcedureIdFieldNumber;
const int ProcedureCall::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureCall::ProcedureCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureCall.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.ProcedureCall)
}
ProcedureCall::ProcedureCall(const ProcedureCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  procedure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.procedure().size() > 0) {
    procedure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procedure_);
  }
  ::memcpy(&service_id_, &from.service_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&procedure_id_) -
    reinterpret_cast<char*>(&service_id_)) + sizeof(procedure_id_));
  // @@protoc_insertion_point(copy_constructor:krpc.schema.ProcedureCall)
}

void ProcedureCall::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  procedure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&service_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&procedure_id_) -
      reinterpret_cast<char*>(&service_id_)) + sizeof(procedure_id_));
}

ProcedureCall::~ProcedureCall() {
  // @@protoc_insertion_point(destructor:krpc.schema.ProcedureCall)
  SharedDtor();
}

void ProcedureCall::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  procedure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcedureCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureCall::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureCall& ProcedureCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureCall.base);
  return *internal_default_instance();
}


void ProcedureCall::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.ProcedureCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  procedure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&service_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&procedure_id_) -
      reinterpret_cast<char*>(&service_id_)) + sizeof(procedure_id_));
  _internal_metadata_.Clear();
}

bool ProcedureCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.ProcedureCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.ProcedureCall.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string procedure = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_procedure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->procedure().data(), static_cast<int>(this->procedure().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.ProcedureCall.procedure"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Argument arguments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 service_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &service_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 procedure_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &procedure_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.ProcedureCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.ProcedureCall)
  return false;
#undef DO_
}

void ProcedureCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.ProcedureCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ProcedureCall.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string procedure = 2;
  if (this->procedure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->procedure().data(), static_cast<int>(this->procedure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ProcedureCall.procedure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->procedure(), output);
  }

  // repeated .krpc.schema.Argument arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // uint32 service_id = 4;
  if (this->service_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->service_id(), output);
  }

  // uint32 procedure_id = 5;
  if (this->procedure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->procedure_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.ProcedureCall)
}

::google::protobuf::uint8* ProcedureCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.ProcedureCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ProcedureCall.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string procedure = 2;
  if (this->procedure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->procedure().data(), static_cast<int>(this->procedure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.ProcedureCall.procedure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->procedure(), target);
  }

  // repeated .krpc.schema.Argument arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // uint32 service_id = 4;
  if (this->service_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->service_id(), target);
  }

  // uint32 procedure_id = 5;
  if (this->procedure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->procedure_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.ProcedureCall)
  return target;
}

size_t ProcedureCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.ProcedureCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.Argument arguments = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string procedure = 2;
  if (this->procedure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->procedure());
  }

  // uint32 service_id = 4;
  if (this->service_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->service_id());
  }

  // uint32 procedure_id = 5;
  if (this->procedure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->procedure_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.ProcedureCall)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.ProcedureCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.ProcedureCall)
    MergeFrom(*source);
  }
}

void ProcedureCall::MergeFrom(const ProcedureCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.ProcedureCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.procedure().size() > 0) {

    procedure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procedure_);
  }
  if (from.service_id() != 0) {
    set_service_id(from.service_id());
  }
  if (from.procedure_id() != 0) {
    set_procedure_id(from.procedure_id());
  }
}

void ProcedureCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.ProcedureCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureCall::CopyFrom(const ProcedureCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.ProcedureCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureCall::IsInitialized() const {
  return true;
}

void ProcedureCall::Swap(ProcedureCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureCall::InternalSwap(ProcedureCall* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  procedure_.Swap(&other->procedure_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(service_id_, other->service_id_);
  swap(procedure_id_, other->procedure_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureCall::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Argument::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Argument::kPositionFieldNumber;
const int Argument::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Argument::Argument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Argument.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Argument)
}
Argument::Argument(const Argument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Argument)
}

void Argument::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = 0u;
}

Argument::~Argument() {
  // @@protoc_insertion_point(destructor:krpc.schema.Argument)
  SharedDtor();
}

void Argument::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Argument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Argument::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Argument& Argument::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Argument.base);
  return *internal_default_instance();
}


void Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = 0u;
  _internal_metadata_.Clear();
}

bool Argument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Argument)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Argument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Argument)
  return false;
#undef DO_
}

void Argument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 position = 1;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->position(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Argument)
}

::google::protobuf::uint8* Argument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 position = 1;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->position(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Argument)
  return target;
}

size_t Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Argument)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint32 position = 1;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Argument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  const Argument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Argument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Argument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Argument)
    MergeFrom(*source);
  }
}

void Argument::MergeFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void Argument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Argument::CopyFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Argument::IsInitialized() const {
  return true;
}

void Argument::Swap(Argument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Argument::InternalSwap(Argument* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Argument::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::krpc::schema::_Response_default_instance_._instance.get_mutable()->error_ = const_cast< ::krpc::schema::Error*>(
      ::krpc::schema::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kErrorFieldNumber;
const int Response::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::krpc::schema::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Response)
}

void Response::SharedCtor() {
  error_ = NULL;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:krpc.schema.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.ProcedureResult results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // repeated .krpc.schema.ProcedureResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // repeated .krpc.schema.ProcedureResult results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.ProcedureResult results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_error()) {
    mutable_error()->::krpc::schema::Error::MergeFrom(from.error());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureResult::InitAsDefaultInstance() {
  ::krpc::schema::_ProcedureResult_default_instance_._instance.get_mutable()->error_ = const_cast< ::krpc::schema::Error*>(
      ::krpc::schema::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureResult::kErrorFieldNumber;
const int ProcedureResult::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureResult::ProcedureResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.ProcedureResult)
}
ProcedureResult::ProcedureResult(const ProcedureResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_error()) {
    error_ = new ::krpc::schema::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.ProcedureResult)
}

void ProcedureResult::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

ProcedureResult::~ProcedureResult() {
  // @@protoc_insertion_point(destructor:krpc.schema.ProcedureResult)
  SharedDtor();
}

void ProcedureResult::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void ProcedureResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureResult::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureResult& ProcedureResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_ProcedureResult.base);
  return *internal_default_instance();
}


void ProcedureResult::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.ProcedureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcedureResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.ProcedureResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.ProcedureResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.ProcedureResult)
  return false;
#undef DO_
}

void ProcedureResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.ProcedureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.ProcedureResult)
}

::google::protobuf::uint8* ProcedureResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.ProcedureResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.ProcedureResult)
  return target;
}

size_t ProcedureResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.ProcedureResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .krpc.schema.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.ProcedureResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.ProcedureResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.ProcedureResult)
    MergeFrom(*source);
  }
}

void ProcedureResult::MergeFrom(const ProcedureResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.ProcedureResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_error()) {
    mutable_error()->::krpc::schema::Error::MergeFrom(from.error());
  }
}

void ProcedureResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.ProcedureResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureResult::CopyFrom(const ProcedureResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.ProcedureResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureResult::IsInitialized() const {
  return true;
}

void ProcedureResult::Swap(ProcedureResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureResult::InternalSwap(ProcedureResult* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureResult::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kServiceFieldNumber;
const int Error::kNameFieldNumber;
const int Error::kDescriptionFieldNumber;
const int Error::kStackTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  stack_trace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stack_trace().size() > 0) {
    stack_trace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stack_trace_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Error)
}

void Error::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_trace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:krpc.schema.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_trace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_trace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Error.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Error.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Error.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stack_trace = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stack_trace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stack_trace().data(), static_cast<int>(this->stack_trace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Error.stack_trace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string stack_trace = 4;
  if (this->stack_trace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_trace().data(), static_cast<int>(this->stack_trace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.stack_trace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stack_trace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string stack_trace = 4;
  if (this->stack_trace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_trace().data(), static_cast<int>(this->stack_trace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Error.stack_trace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stack_trace(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string stack_trace = 4;
  if (this->stack_trace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stack_trace());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.stack_trace().size() > 0) {

    stack_trace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stack_trace_);
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stack_trace_.Swap(&other->stack_trace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamUpdate::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamUpdate::StreamUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.StreamUpdate)
}
StreamUpdate::StreamUpdate(const StreamUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.StreamUpdate)
}

void StreamUpdate::SharedCtor() {
}

StreamUpdate::~StreamUpdate() {
  // @@protoc_insertion_point(destructor:krpc.schema.StreamUpdate)
  SharedDtor();
}

void StreamUpdate::SharedDtor() {
}

void StreamUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamUpdate::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamUpdate& StreamUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamUpdate.base);
  return *internal_default_instance();
}


void StreamUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.StreamUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool StreamUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.StreamUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .krpc.schema.StreamResult results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.StreamUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.StreamUpdate)
  return false;
#undef DO_
}

void StreamUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.StreamUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.StreamResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.StreamUpdate)
}

::google::protobuf::uint8* StreamUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.StreamUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.StreamResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.StreamUpdate)
  return target;
}

size_t StreamUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.StreamUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.StreamResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.StreamUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.StreamUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.StreamUpdate)
    MergeFrom(*source);
  }
}

void StreamUpdate::MergeFrom(const StreamUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.StreamUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void StreamUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.StreamUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamUpdate::CopyFrom(const StreamUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.StreamUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamUpdate::IsInitialized() const {
  return true;
}

void StreamUpdate::Swap(StreamUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamUpdate::InternalSwap(StreamUpdate* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamUpdate::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamResult::InitAsDefaultInstance() {
  ::krpc::schema::_StreamResult_default_instance_._instance.get_mutable()->result_ = const_cast< ::krpc::schema::ProcedureResult*>(
      ::krpc::schema::ProcedureResult::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamResult::kIdFieldNumber;
const int StreamResult::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamResult::StreamResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.StreamResult)
}
StreamResult::StreamResult(const StreamResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::krpc::schema::ProcedureResult(*from.result_);
  } else {
    result_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.StreamResult)
}

void StreamResult::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&result_)) + sizeof(id_));
}

StreamResult::~StreamResult() {
  // @@protoc_insertion_point(destructor:krpc.schema.StreamResult)
  SharedDtor();
}

void StreamResult::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void StreamResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamResult::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamResult& StreamResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_StreamResult.base);
  return *internal_default_instance();
}


void StreamResult::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.StreamResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool StreamResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.StreamResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .krpc.schema.ProcedureResult result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.StreamResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.StreamResult)
  return false;
#undef DO_
}

void StreamResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.StreamResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .krpc.schema.ProcedureResult result = 2;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.StreamResult)
}

::google::protobuf::uint8* StreamResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.StreamResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .krpc.schema.ProcedureResult result = 2;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_result(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.StreamResult)
  return target;
}

size_t StreamResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.StreamResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .krpc.schema.ProcedureResult result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.StreamResult)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.StreamResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.StreamResult)
    MergeFrom(*source);
  }
}

void StreamResult::MergeFrom(const StreamResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.StreamResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    mutable_result()->::krpc::schema::ProcedureResult::MergeFrom(from.result());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void StreamResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.StreamResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamResult::CopyFrom(const StreamResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.StreamResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamResult::IsInitialized() const {
  return true;
}

void StreamResult::Swap(StreamResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamResult::InternalSwap(StreamResult* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamResult::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Services::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Services::kServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Services::Services()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Services.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Services)
}
Services::Services(const Services& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Services)
}

void Services::SharedCtor() {
}

Services::~Services() {
  // @@protoc_insertion_point(destructor:krpc.schema.Services)
  SharedDtor();
}

void Services::SharedDtor() {
}

void Services::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Services::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Services& Services::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Services.base);
  return *internal_default_instance();
}


void Services::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Services)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  _internal_metadata_.Clear();
}

bool Services::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Services)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .krpc.schema.Service services = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Services)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Services)
  return false;
#undef DO_
}

void Services::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Services)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.Service services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->services(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Services)
}

::google::protobuf::uint8* Services::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Services)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.Service services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->services(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Services)
  return target;
}

size_t Services::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Services)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.Service services = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Services::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Services)
  GOOGLE_DCHECK_NE(&from, this);
  const Services* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Services>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Services)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Services)
    MergeFrom(*source);
  }
}

void Services::MergeFrom(const Services& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Services)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
}

void Services::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Services)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Services::CopyFrom(const Services& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Services)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Services::IsInitialized() const {
  return true;
}

void Services::Swap(Services* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Services::InternalSwap(Services* other) {
  using std::swap;
  CastToBase(&services_)->InternalSwap(CastToBase(&other->services_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Services::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kNameFieldNumber;
const int Service::kProceduresFieldNumber;
const int Service::kClassesFieldNumber;
const int Service::kEnumerationsFieldNumber;
const int Service::kExceptionsFieldNumber;
const int Service::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Service.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      procedures_(from.procedures_),
      classes_(from.classes_),
      enumerations_(from.enumerations_),
      exceptions_(from.exceptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Service)
}

void Service::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:krpc.schema.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Service::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service& Service::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Service.base);
  return *internal_default_instance();
}


void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  procedures_.Clear();
  classes_.Clear();
  enumerations_.Clear();
  exceptions_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Service)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Service.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Procedure procedures = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_procedures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Class classes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_classes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Enumeration enumerations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_enumerations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Exception exceptions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exceptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Service.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Service.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .krpc.schema.Procedure procedures = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procedures_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->procedures(static_cast<int>(i)),
      output);
  }

  // repeated .krpc.schema.Class classes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->classes(static_cast<int>(i)),
      output);
  }

  // repeated .krpc.schema.Enumeration enumerations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->enumerations(static_cast<int>(i)),
      output);
  }

  // repeated .krpc.schema.Exception exceptions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exceptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->exceptions(static_cast<int>(i)),
      output);
  }

  // string documentation = 6;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Service.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->documentation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Service.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .krpc.schema.Procedure procedures = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procedures_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->procedures(static_cast<int>(i)), deterministic, target);
  }

  // repeated .krpc.schema.Class classes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->classes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .krpc.schema.Enumeration enumerations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->enumerations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .krpc.schema.Exception exceptions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exceptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->exceptions(static_cast<int>(i)), deterministic, target);
  }

  // string documentation = 6;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Service.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->documentation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Service)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.Procedure procedures = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->procedures_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->procedures(static_cast<int>(i)));
    }
  }

  // repeated .krpc.schema.Class classes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->classes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->classes(static_cast<int>(i)));
    }
  }

  // repeated .krpc.schema.Enumeration enumerations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->enumerations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->enumerations(static_cast<int>(i)));
    }
  }

  // repeated .krpc.schema.Exception exceptions = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->exceptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exceptions(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 6;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  procedures_.MergeFrom(from.procedures_);
  classes_.MergeFrom(from.classes_);
  enumerations_.MergeFrom(from.enumerations_);
  exceptions_.MergeFrom(from.exceptions_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  CastToBase(&procedures_)->InternalSwap(CastToBase(&other->procedures_));
  CastToBase(&classes_)->InternalSwap(CastToBase(&other->classes_));
  CastToBase(&enumerations_)->InternalSwap(CastToBase(&other->enumerations_));
  CastToBase(&exceptions_)->InternalSwap(CastToBase(&other->exceptions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Procedure::InitAsDefaultInstance() {
  ::krpc::schema::_Procedure_default_instance_._instance.get_mutable()->return_type_ = const_cast< ::krpc::schema::Type*>(
      ::krpc::schema::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Procedure::kNameFieldNumber;
const int Procedure::kParametersFieldNumber;
const int Procedure::kReturnTypeFieldNumber;
const int Procedure::kReturnIsNullableFieldNumber;
const int Procedure::kGameScenesFieldNumber;
const int Procedure::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Procedure::Procedure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Procedure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Procedure)
}
Procedure::Procedure(const Procedure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameters_(from.parameters_),
      game_scenes_(from.game_scenes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  if (from.has_return_type()) {
    return_type_ = new ::krpc::schema::Type(*from.return_type_);
  } else {
    return_type_ = NULL;
  }
  return_is_nullable_ = from.return_is_nullable_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Procedure)
}

void Procedure::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&return_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_is_nullable_) -
      reinterpret_cast<char*>(&return_type_)) + sizeof(return_is_nullable_));
}

Procedure::~Procedure() {
  // @@protoc_insertion_point(destructor:krpc.schema.Procedure)
  SharedDtor();
}

void Procedure::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete return_type_;
}

void Procedure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Procedure::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Procedure& Procedure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Procedure.base);
  return *internal_default_instance();
}


void Procedure::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Procedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  game_scenes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && return_type_ != NULL) {
    delete return_type_;
  }
  return_type_ = NULL;
  return_is_nullable_ = false;
  _internal_metadata_.Clear();
}

bool Procedure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Procedure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Procedure.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Parameter parameters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .krpc.schema.Type return_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_return_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool return_is_nullable = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_is_nullable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Procedure.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Procedure.GameScene game_scenes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_game_scenes(static_cast< ::krpc::schema::Procedure_GameScene >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_game_scenes(static_cast< ::krpc::schema::Procedure_GameScene >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Procedure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Procedure)
  return false;
#undef DO_
}

void Procedure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Procedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Procedure.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .krpc.schema.Parameter parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->parameters(static_cast<int>(i)),
      output);
  }

  // .krpc.schema.Type return_type = 3;
  if (this->has_return_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_return_type(), output);
  }

  // bool return_is_nullable = 4;
  if (this->return_is_nullable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->return_is_nullable(), output);
  }

  // string documentation = 5;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Procedure.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->documentation(), output);
  }

  // repeated .krpc.schema.Procedure.GameScene game_scenes = 6;
  if (this->game_scenes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_game_scenes_cached_byte_size_));
  }
  for (int i = 0, n = this->game_scenes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->game_scenes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Procedure)
}

::google::protobuf::uint8* Procedure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Procedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Procedure.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .krpc.schema.Parameter parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // .krpc.schema.Type return_type = 3;
  if (this->has_return_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_return_type(), deterministic, target);
  }

  // bool return_is_nullable = 4;
  if (this->return_is_nullable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->return_is_nullable(), target);
  }

  // string documentation = 5;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Procedure.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->documentation(), target);
  }

  // repeated .krpc.schema.Procedure.GameScene game_scenes = 6;
  if (this->game_scenes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _game_scenes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->game_scenes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Procedure)
  return target;
}

size_t Procedure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Procedure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.Parameter parameters = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // repeated .krpc.schema.Procedure.GameScene game_scenes = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->game_scenes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->game_scenes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _game_scenes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 5;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  // .krpc.schema.Type return_type = 3;
  if (this->has_return_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *return_type_);
  }

  // bool return_is_nullable = 4;
  if (this->return_is_nullable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Procedure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Procedure)
  GOOGLE_DCHECK_NE(&from, this);
  const Procedure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Procedure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Procedure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Procedure)
    MergeFrom(*source);
  }
}

void Procedure::MergeFrom(const Procedure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Procedure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  game_scenes_.MergeFrom(from.game_scenes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  if (from.has_return_type()) {
    mutable_return_type()->::krpc::schema::Type::MergeFrom(from.return_type());
  }
  if (from.return_is_nullable() != 0) {
    set_return_is_nullable(from.return_is_nullable());
  }
}

void Procedure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Procedure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Procedure::CopyFrom(const Procedure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Procedure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Procedure::IsInitialized() const {
  return true;
}

void Procedure::Swap(Procedure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Procedure::InternalSwap(Procedure* other) {
  using std::swap;
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
  game_scenes_.InternalSwap(&other->game_scenes_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(return_type_, other->return_type_);
  swap(return_is_nullable_, other->return_is_nullable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Procedure::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Parameter::InitAsDefaultInstance() {
  ::krpc::schema::_Parameter_default_instance_._instance.get_mutable()->type_ = const_cast< ::krpc::schema::Type*>(
      ::krpc::schema::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kNameFieldNumber;
const int Parameter::kTypeFieldNumber;
const int Parameter::kDefaultValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_value().size() > 0) {
    default_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value_);
  }
  if (from.has_type()) {
    type_ = new ::krpc::schema::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Parameter)
}

void Parameter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:krpc.schema.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Parameter::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Parameter& Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Parameter.base);
  return *internal_default_instance();
}


void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Parameter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .krpc.schema.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes default_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_default_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Parameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .krpc.schema.Type type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  // bytes default_value = 3;
  if (this->default_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->default_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Parameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .krpc.schema.Type type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  // bytes default_value = 3;
  if (this->default_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->default_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes default_value = 3;
  if (this->default_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->default_value());
  }

  // .krpc.schema.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Parameter)
    MergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.default_value().size() > 0) {

    default_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_value_);
  }
  if (from.has_type()) {
    mutable_type()->::krpc::schema::Type::MergeFrom(from.type());
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_value_.Swap(&other->default_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Class::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Class::kNameFieldNumber;
const int Class::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Class::Class()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Class.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Class)
}
Class::Class(const Class& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Class)
}

void Class::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Class::~Class() {
  // @@protoc_insertion_point(destructor:krpc.schema.Class)
  SharedDtor();
}

void Class::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Class::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Class::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Class& Class::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Class.base);
  return *internal_default_instance();
}


void Class::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Class::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Class)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Class.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Class.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Class)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Class)
  return false;
#undef DO_
}

void Class::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Class.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Class.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Class)
}

::google::protobuf::uint8* Class::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Class)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Class.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Class.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Class)
  return target;
}

size_t Class::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Class)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Class::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Class)
  GOOGLE_DCHECK_NE(&from, this);
  const Class* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Class>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Class)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Class)
    MergeFrom(*source);
  }
}

void Class::MergeFrom(const Class& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Class)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
}

void Class::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Class)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Class::CopyFrom(const Class& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Class)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Class::IsInitialized() const {
  return true;
}

void Class::Swap(Class* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Class::InternalSwap(Class* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Class::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Enumeration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Enumeration::kNameFieldNumber;
const int Enumeration::kValuesFieldNumber;
const int Enumeration::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Enumeration::Enumeration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Enumeration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Enumeration)
}
Enumeration::Enumeration(const Enumeration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Enumeration)
}

void Enumeration::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Enumeration::~Enumeration() {
  // @@protoc_insertion_point(destructor:krpc.schema.Enumeration)
  SharedDtor();
}

void Enumeration::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Enumeration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Enumeration::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Enumeration& Enumeration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Enumeration.base);
  return *internal_default_instance();
}


void Enumeration::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Enumeration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Enumeration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Enumeration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Enumeration.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.EnumerationValue values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Enumeration.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Enumeration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Enumeration)
  return false;
#undef DO_
}

void Enumeration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Enumeration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Enumeration.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .krpc.schema.EnumerationValue values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->values(static_cast<int>(i)),
      output);
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Enumeration.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->documentation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Enumeration)
}

::google::protobuf::uint8* Enumeration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Enumeration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Enumeration.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .krpc.schema.EnumerationValue values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->values(static_cast<int>(i)), deterministic, target);
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Enumeration.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->documentation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Enumeration)
  return target;
}

size_t Enumeration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Enumeration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.EnumerationValue values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Enumeration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Enumeration)
  GOOGLE_DCHECK_NE(&from, this);
  const Enumeration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Enumeration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Enumeration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Enumeration)
    MergeFrom(*source);
  }
}

void Enumeration::MergeFrom(const Enumeration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Enumeration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
}

void Enumeration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Enumeration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Enumeration::CopyFrom(const Enumeration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Enumeration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Enumeration::IsInitialized() const {
  return true;
}

void Enumeration::Swap(Enumeration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Enumeration::InternalSwap(Enumeration* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Enumeration::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumerationValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumerationValue::kNameFieldNumber;
const int EnumerationValue::kValueFieldNumber;
const int EnumerationValue::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumerationValue::EnumerationValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_EnumerationValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.EnumerationValue)
}
EnumerationValue::EnumerationValue(const EnumerationValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.EnumerationValue)
}

void EnumerationValue::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

EnumerationValue::~EnumerationValue() {
  // @@protoc_insertion_point(destructor:krpc.schema.EnumerationValue)
  SharedDtor();
}

void EnumerationValue::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnumerationValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnumerationValue::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumerationValue& EnumerationValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_EnumerationValue.base);
  return *internal_default_instance();
}


void EnumerationValue::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.EnumerationValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

bool EnumerationValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.EnumerationValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.EnumerationValue.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.EnumerationValue.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.EnumerationValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.EnumerationValue)
  return false;
#undef DO_
}

void EnumerationValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.EnumerationValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.EnumerationValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.EnumerationValue.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->documentation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.EnumerationValue)
}

::google::protobuf::uint8* EnumerationValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.EnumerationValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.EnumerationValue.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.EnumerationValue.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->documentation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.EnumerationValue)
  return target;
}

size_t EnumerationValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.EnumerationValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 3;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnumerationValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.EnumerationValue)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumerationValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumerationValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.EnumerationValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.EnumerationValue)
    MergeFrom(*source);
  }
}

void EnumerationValue::MergeFrom(const EnumerationValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.EnumerationValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void EnumerationValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.EnumerationValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumerationValue::CopyFrom(const EnumerationValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.EnumerationValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumerationValue::IsInitialized() const {
  return true;
}

void EnumerationValue::Swap(EnumerationValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumerationValue::InternalSwap(EnumerationValue* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnumerationValue::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Exception::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Exception::kNameFieldNumber;
const int Exception::kDocumentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Exception::Exception()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Exception.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Exception)
}
Exception::Exception(const Exception& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.documentation().size() > 0) {
    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Exception)
}

void Exception::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Exception::~Exception() {
  // @@protoc_insertion_point(destructor:krpc.schema.Exception)
  SharedDtor();
}

void Exception::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Exception::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Exception::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Exception& Exception::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Exception.base);
  return *internal_default_instance();
}


void Exception::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Exception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Exception::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Exception)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Exception.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string documentation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation().data(), static_cast<int>(this->documentation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Exception.documentation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Exception)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Exception)
  return false;
#undef DO_
}

void Exception::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Exception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Exception.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Exception.documentation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Exception)
}

::google::protobuf::uint8* Exception::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Exception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Exception.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation().data(), static_cast<int>(this->documentation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Exception.documentation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Exception)
  return target;
}

size_t Exception::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Exception)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string documentation = 2;
  if (this->documentation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Exception::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Exception)
  GOOGLE_DCHECK_NE(&from, this);
  const Exception* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Exception>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Exception)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Exception)
    MergeFrom(*source);
  }
}

void Exception::MergeFrom(const Exception& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Exception)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.documentation().size() > 0) {

    documentation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_);
  }
}

void Exception::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Exception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Exception::CopyFrom(const Exception& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Exception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Exception::IsInitialized() const {
  return true;
}

void Exception::Swap(Exception* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Exception::InternalSwap(Exception* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  documentation_.Swap(&other->documentation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Exception::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kCodeFieldNumber;
const int Type::kServiceFieldNumber;
const int Type::kNameFieldNumber;
const int Type::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Type)
}

void Type::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:krpc.schema.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  types_.Clear();
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.Type.TypeCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::krpc::schema::Type_TypeCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Type.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Type.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .krpc.schema.Type types = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Type.TypeCode code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Type.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Type.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .krpc.schema.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->types(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Type.TypeCode code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Type.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Type.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .krpc.schema.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->types(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.Type types = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->types(static_cast<int>(i)));
    }
  }

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .krpc.schema.Type.TypeCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  CastToBase(&types_)->InternalSwap(CastToBase(&other->types_));
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple::Tuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Tuple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Tuple)
}
Tuple::Tuple(const Tuple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Tuple)
}

void Tuple::SharedCtor() {
}

Tuple::~Tuple() {
  // @@protoc_insertion_point(destructor:krpc.schema.Tuple)
  SharedDtor();
}

void Tuple::SharedDtor() {
}

void Tuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tuple::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tuple& Tuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Tuple.base);
  return *internal_default_instance();
}


void Tuple::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Tuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Tuple)
  return false;
#undef DO_
}

void Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->items(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Tuple)
}

::google::protobuf::uint8* Tuple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->items(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Tuple)
  return target;
}

size_t Tuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Tuple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes items = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->items_size());
  for (int i = 0, n = this->items_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->items(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tuple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  const Tuple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Tuple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Tuple)
    MergeFrom(*source);
  }
}

void Tuple::MergeFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void Tuple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple::CopyFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple::IsInitialized() const {
  return true;
}

void Tuple::Swap(Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple::InternalSwap(Tuple* other) {
  using std::swap;
  items_.InternalSwap(CastToBase(&other->items_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tuple::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int List::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

List::List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_List.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.List)
}
List::List(const List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.List)
}

void List::SharedCtor() {
}

List::~List() {
  // @@protoc_insertion_point(destructor:krpc.schema.List)
  SharedDtor();
}

void List::SharedDtor() {
}

void List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* List::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const List& List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_List.base);
  return *internal_default_instance();
}


void List::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.List)
  return false;
#undef DO_
}

void List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->items(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.List)
}

::google::protobuf::uint8* List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->items(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.List)
  return target;
}

size_t List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes items = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->items_size());
  for (int i = 0, n = this->items_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->items(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.List)
  GOOGLE_DCHECK_NE(&from, this);
  const List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.List)
    MergeFrom(*source);
  }
}

void List::MergeFrom(const List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List::CopyFrom(const List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List::IsInitialized() const {
  return true;
}

void List::Swap(List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void List::InternalSwap(List* other) {
  using std::swap;
  items_.InternalSwap(CastToBase(&other->items_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata List::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Set::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Set::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Set::Set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Set.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Set)
}
Set::Set(const Set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Set)
}

void Set::SharedCtor() {
}

Set::~Set() {
  // @@protoc_insertion_point(destructor:krpc.schema.Set)
  SharedDtor();
}

void Set::SharedDtor() {
}

void Set::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Set::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Set& Set::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Set.base);
  return *internal_default_instance();
}


void Set::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Set)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Set)
  return false;
#undef DO_
}

void Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->items(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Set)
}

::google::protobuf::uint8* Set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes items = 1;
  for (int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->items(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Set)
  return target;
}

size_t Set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Set)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes items = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->items_size());
  for (int i = 0, n = this->items_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->items(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Set)
  GOOGLE_DCHECK_NE(&from, this);
  const Set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Set)
    MergeFrom(*source);
  }
}

void Set::MergeFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void Set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Set::CopyFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Set::IsInitialized() const {
  return true;
}

void Set::Swap(Set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Set::InternalSwap(Set* other) {
  using std::swap;
  items_.InternalSwap(CastToBase(&other->items_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Set::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dictionary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dictionary::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dictionary::Dictionary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Dictionary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Dictionary)
}
Dictionary::Dictionary(const Dictionary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Dictionary)
}

void Dictionary::SharedCtor() {
}

Dictionary::~Dictionary() {
  // @@protoc_insertion_point(destructor:krpc.schema.Dictionary)
  SharedDtor();
}

void Dictionary::SharedDtor() {
}

void Dictionary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dictionary::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dictionary& Dictionary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Dictionary.base);
  return *internal_default_instance();
}


void Dictionary::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Dictionary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool Dictionary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Dictionary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .krpc.schema.DictionaryEntry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Dictionary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Dictionary)
  return false;
#undef DO_
}

void Dictionary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Dictionary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.DictionaryEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Dictionary)
}

::google::protobuf::uint8* Dictionary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Dictionary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .krpc.schema.DictionaryEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Dictionary)
  return target;
}

size_t Dictionary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Dictionary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .krpc.schema.DictionaryEntry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dictionary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Dictionary)
  GOOGLE_DCHECK_NE(&from, this);
  const Dictionary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dictionary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Dictionary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Dictionary)
    MergeFrom(*source);
  }
}

void Dictionary::MergeFrom(const Dictionary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Dictionary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void Dictionary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Dictionary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dictionary::CopyFrom(const Dictionary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Dictionary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dictionary::IsInitialized() const {
  return true;
}

void Dictionary::Swap(Dictionary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dictionary::InternalSwap(Dictionary* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dictionary::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DictionaryEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictionaryEntry::kKeyFieldNumber;
const int DictionaryEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictionaryEntry::DictionaryEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_DictionaryEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.DictionaryEntry)
}
DictionaryEntry::DictionaryEntry(const DictionaryEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.DictionaryEntry)
}

void DictionaryEntry::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DictionaryEntry::~DictionaryEntry() {
  // @@protoc_insertion_point(destructor:krpc.schema.DictionaryEntry)
  SharedDtor();
}

void DictionaryEntry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DictionaryEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DictionaryEntry::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DictionaryEntry& DictionaryEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_DictionaryEntry.base);
  return *internal_default_instance();
}


void DictionaryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.DictionaryEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DictionaryEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.DictionaryEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.DictionaryEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.DictionaryEntry)
  return false;
#undef DO_
}

void DictionaryEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.DictionaryEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.DictionaryEntry)
}

::google::protobuf::uint8* DictionaryEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.DictionaryEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.DictionaryEntry)
  return target;
}

size_t DictionaryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.DictionaryEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DictionaryEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.DictionaryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const DictionaryEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictionaryEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.DictionaryEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.DictionaryEntry)
    MergeFrom(*source);
  }
}

void DictionaryEntry::MergeFrom(const DictionaryEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.DictionaryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void DictionaryEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.DictionaryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictionaryEntry::CopyFrom(const DictionaryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.DictionaryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictionaryEntry::IsInitialized() const {
  return true;
}

void DictionaryEntry::Swap(DictionaryEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictionaryEntry::InternalSwap(DictionaryEntry* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DictionaryEntry::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stream::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stream::Stream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Stream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Stream)
}
Stream::Stream(const Stream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Stream)
}

void Stream::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

Stream::~Stream() {
  // @@protoc_insertion_point(destructor:krpc.schema.Stream)
  SharedDtor();
}

void Stream::SharedDtor() {
}

void Stream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Stream::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stream& Stream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Stream.base);
  return *internal_default_instance();
}


void Stream::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Stream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Stream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Stream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Stream)
  return false;
#undef DO_
}

void Stream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Stream)
}

::google::protobuf::uint8* Stream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Stream)
  return target;
}

size_t Stream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Stream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Stream)
  GOOGLE_DCHECK_NE(&from, this);
  const Stream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Stream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Stream)
    MergeFrom(*source);
  }
}

void Stream::MergeFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Stream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Stream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stream::CopyFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stream::IsInitialized() const {
  return true;
}

void Stream::Swap(Stream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stream::InternalSwap(Stream* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Stream::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::krpc::schema::_Event_default_instance_._instance.get_mutable()->stream_ = const_cast< ::krpc::schema::Stream*>(
      ::krpc::schema::Stream::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stream()) {
    stream_ = new ::krpc::schema::Stream(*from.stream_);
  } else {
    stream_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Event)
}

void Event::SharedCtor() {
  stream_ = NULL;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:krpc.schema.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (this != internal_default_instance()) delete stream_;
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Event.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && stream_ != NULL) {
    delete stream_;
  }
  stream_ = NULL;
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.Stream stream = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Stream stream = 1;
  if (this->has_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Stream stream = 1;
  if (this->has_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stream(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .krpc.schema.Stream stream = 1;
  if (this->has_stream()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stream_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stream()) {
    mutable_stream()->::krpc::schema::Stream::MergeFrom(from.stream());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  swap(stream_, other->stream_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kVersionFieldNumber;
const int Status::kBytesReadFieldNumber;
const int Status::kBytesWrittenFieldNumber;
const int Status::kBytesReadRateFieldNumber;
const int Status::kBytesWrittenRateFieldNumber;
const int Status::kRpcsExecutedFieldNumber;
const int Status::kRpcRateFieldNumber;
const int Status::kOneRpcPerUpdateFieldNumber;
const int Status::kMaxTimePerUpdateFieldNumber;
const int Status::kAdaptiveRateControlFieldNumber;
const int Status::kBlockingRecvFieldNumber;
const int Status::kRecvTimeoutFieldNumber;
const int Status::kTimePerRpcUpdateFieldNumber;
const int Status::kPollTimePerRpcUpdateFieldNumber;
const int Status::kExecTimePerRpcUpdateFieldNumber;
const int Status::kStreamRpcsFieldNumber;
const int Status::kStreamRpcsExecutedFieldNumber;
const int Status::kStreamRpcRateFieldNumber;
const int Status::kTimePerStreamUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.Status)
}
Status::Status(const Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&bytes_read_, &from.bytes_read_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_per_stream_update_) -
    reinterpret_cast<char*>(&bytes_read_)) + sizeof(time_per_stream_update_));
  // @@protoc_insertion_point(copy_constructor:krpc.schema.Status)
}

void Status::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_per_stream_update_) -
      reinterpret_cast<char*>(&bytes_read_)) + sizeof(time_per_stream_update_));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:krpc.schema.Status)
  SharedDtor();
}

void Status::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Status::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Status& Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_Status.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_per_stream_update_) -
      reinterpret_cast<char*>(&bytes_read_)) + sizeof(time_per_stream_update_));
  _internal_metadata_.Clear();
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "krpc.schema.Status.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_read = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_written = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_written_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bytes_read_rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bytes_read_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bytes_written_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bytes_written_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rpcs_executed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rpcs_executed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rpc_rate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rpc_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool one_rpc_per_update = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &one_rpc_per_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_time_per_update = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_time_per_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool adaptive_rate_control = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adaptive_rate_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blocking_recv = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blocking_recv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recv_timeout = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_per_rpc_update = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_per_rpc_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float poll_time_per_rpc_update = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &poll_time_per_rpc_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float exec_time_per_rpc_update = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exec_time_per_rpc_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 stream_rpcs = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stream_rpcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 stream_rpcs_executed = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stream_rpcs_executed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float stream_rpc_rate = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stream_rpc_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_per_stream_update = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_per_stream_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Status.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // uint64 bytes_read = 2;
  if (this->bytes_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bytes_read(), output);
  }

  // uint64 bytes_written = 3;
  if (this->bytes_written() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes_written(), output);
  }

  // float bytes_read_rate = 4;
  if (this->bytes_read_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->bytes_read_rate(), output);
  }

  // float bytes_written_rate = 5;
  if (this->bytes_written_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->bytes_written_rate(), output);
  }

  // uint64 rpcs_executed = 6;
  if (this->rpcs_executed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->rpcs_executed(), output);
  }

  // float rpc_rate = 7;
  if (this->rpc_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rpc_rate(), output);
  }

  // bool one_rpc_per_update = 8;
  if (this->one_rpc_per_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->one_rpc_per_update(), output);
  }

  // uint32 max_time_per_update = 9;
  if (this->max_time_per_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->max_time_per_update(), output);
  }

  // bool adaptive_rate_control = 10;
  if (this->adaptive_rate_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->adaptive_rate_control(), output);
  }

  // bool blocking_recv = 11;
  if (this->blocking_recv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->blocking_recv(), output);
  }

  // uint32 recv_timeout = 12;
  if (this->recv_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->recv_timeout(), output);
  }

  // float time_per_rpc_update = 13;
  if (this->time_per_rpc_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->time_per_rpc_update(), output);
  }

  // float poll_time_per_rpc_update = 14;
  if (this->poll_time_per_rpc_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->poll_time_per_rpc_update(), output);
  }

  // float exec_time_per_rpc_update = 15;
  if (this->exec_time_per_rpc_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->exec_time_per_rpc_update(), output);
  }

  // uint32 stream_rpcs = 16;
  if (this->stream_rpcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->stream_rpcs(), output);
  }

  // uint64 stream_rpcs_executed = 17;
  if (this->stream_rpcs_executed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->stream_rpcs_executed(), output);
  }

  // float stream_rpc_rate = 18;
  if (this->stream_rpc_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->stream_rpc_rate(), output);
  }

  // float time_per_stream_update = 19;
  if (this->time_per_stream_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->time_per_stream_update(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.Status)
}

::google::protobuf::uint8* Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "krpc.schema.Status.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // uint64 bytes_read = 2;
  if (this->bytes_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bytes_read(), target);
  }

  // uint64 bytes_written = 3;
  if (this->bytes_written() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes_written(), target);
  }

  // float bytes_read_rate = 4;
  if (this->bytes_read_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->bytes_read_rate(), target);
  }

  // float bytes_written_rate = 5;
  if (this->bytes_written_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->bytes_written_rate(), target);
  }

  // uint64 rpcs_executed = 6;
  if (this->rpcs_executed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->rpcs_executed(), target);
  }

  // float rpc_rate = 7;
  if (this->rpc_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rpc_rate(), target);
  }

  // bool one_rpc_per_update = 8;
  if (this->one_rpc_per_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->one_rpc_per_update(), target);
  }

  // uint32 max_time_per_update = 9;
  if (this->max_time_per_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->max_time_per_update(), target);
  }

  // bool adaptive_rate_control = 10;
  if (this->adaptive_rate_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->adaptive_rate_control(), target);
  }

  // bool blocking_recv = 11;
  if (this->blocking_recv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->blocking_recv(), target);
  }

  // uint32 recv_timeout = 12;
  if (this->recv_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->recv_timeout(), target);
  }

  // float time_per_rpc_update = 13;
  if (this->time_per_rpc_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->time_per_rpc_update(), target);
  }

  // float poll_time_per_rpc_update = 14;
  if (this->poll_time_per_rpc_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->poll_time_per_rpc_update(), target);
  }

  // float exec_time_per_rpc_update = 15;
  if (this->exec_time_per_rpc_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->exec_time_per_rpc_update(), target);
  }

  // uint32 stream_rpcs = 16;
  if (this->stream_rpcs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->stream_rpcs(), target);
  }

  // uint64 stream_rpcs_executed = 17;
  if (this->stream_rpcs_executed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->stream_rpcs_executed(), target);
  }

  // float stream_rpc_rate = 18;
  if (this->stream_rpc_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->stream_rpc_rate(), target);
  }

  // float time_per_stream_update = 19;
  if (this->time_per_stream_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->time_per_stream_update(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // uint64 bytes_read = 2;
  if (this->bytes_read() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_read());
  }

  // uint64 bytes_written = 3;
  if (this->bytes_written() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_written());
  }

  // float bytes_read_rate = 4;
  if (this->bytes_read_rate() != 0) {
    total_size += 1 + 4;
  }

  // float bytes_written_rate = 5;
  if (this->bytes_written_rate() != 0) {
    total_size += 1 + 4;
  }

  // uint64 rpcs_executed = 6;
  if (this->rpcs_executed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rpcs_executed());
  }

  // float rpc_rate = 7;
  if (this->rpc_rate() != 0) {
    total_size += 1 + 4;
  }

  // uint32 max_time_per_update = 9;
  if (this->max_time_per_update() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_time_per_update());
  }

  // bool one_rpc_per_update = 8;
  if (this->one_rpc_per_update() != 0) {
    total_size += 1 + 1;
  }

  // bool adaptive_rate_control = 10;
  if (this->adaptive_rate_control() != 0) {
    total_size += 1 + 1;
  }

  // bool blocking_recv = 11;
  if (this->blocking_recv() != 0) {
    total_size += 1 + 1;
  }

  // uint32 recv_timeout = 12;
  if (this->recv_timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recv_timeout());
  }

  // float time_per_rpc_update = 13;
  if (this->time_per_rpc_update() != 0) {
    total_size += 1 + 4;
  }

  // float poll_time_per_rpc_update = 14;
  if (this->poll_time_per_rpc_update() != 0) {
    total_size += 1 + 4;
  }

  // float exec_time_per_rpc_update = 15;
  if (this->exec_time_per_rpc_update() != 0) {
    total_size += 1 + 4;
  }

  // uint32 stream_rpcs = 16;
  if (this->stream_rpcs() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stream_rpcs());
  }

  // uint64 stream_rpcs_executed = 17;
  if (this->stream_rpcs_executed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stream_rpcs_executed());
  }

  // float stream_rpc_rate = 18;
  if (this->stream_rpc_rate() != 0) {
    total_size += 2 + 4;
  }

  // float time_per_stream_update = 19;
  if (this->time_per_stream_update() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.bytes_read() != 0) {
    set_bytes_read(from.bytes_read());
  }
  if (from.bytes_written() != 0) {
    set_bytes_written(from.bytes_written());
  }
  if (from.bytes_read_rate() != 0) {
    set_bytes_read_rate(from.bytes_read_rate());
  }
  if (from.bytes_written_rate() != 0) {
    set_bytes_written_rate(from.bytes_written_rate());
  }
  if (from.rpcs_executed() != 0) {
    set_rpcs_executed(from.rpcs_executed());
  }
  if (from.rpc_rate() != 0) {
    set_rpc_rate(from.rpc_rate());
  }
  if (from.max_time_per_update() != 0) {
    set_max_time_per_update(from.max_time_per_update());
  }
  if (from.one_rpc_per_update() != 0) {
    set_one_rpc_per_update(from.one_rpc_per_update());
  }
  if (from.adaptive_rate_control() != 0) {
    set_adaptive_rate_control(from.adaptive_rate_control());
  }
  if (from.blocking_recv() != 0) {
    set_blocking_recv(from.blocking_recv());
  }
  if (from.recv_timeout() != 0) {
    set_recv_timeout(from.recv_timeout());
  }
  if (from.time_per_rpc_update() != 0) {
    set_time_per_rpc_update(from.time_per_rpc_update());
  }
  if (from.poll_time_per_rpc_update() != 0) {
    set_poll_time_per_rpc_update(from.poll_time_per_rpc_update());
  }
  if (from.exec_time_per_rpc_update() != 0) {
    set_exec_time_per_rpc_update(from.exec_time_per_rpc_update());
  }
  if (from.stream_rpcs() != 0) {
    set_stream_rpcs(from.stream_rpcs());
  }
  if (from.stream_rpcs_executed() != 0) {
    set_stream_rpcs_executed(from.stream_rpcs_executed());
  }
  if (from.stream_rpc_rate() != 0) {
    set_stream_rpc_rate(from.stream_rpc_rate());
  }
  if (from.time_per_stream_update() != 0) {
    set_time_per_stream_update(from.time_per_stream_update());
  }
}

void Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bytes_read_, other->bytes_read_);
  swap(bytes_written_, other->bytes_written_);
  swap(bytes_read_rate_, other->bytes_read_rate_);
  swap(bytes_written_rate_, other->bytes_written_rate_);
  swap(rpcs_executed_, other->rpcs_executed_);
  swap(rpc_rate_, other->rpc_rate_);
  swap(max_time_per_update_, other->max_time_per_update_);
  swap(one_rpc_per_update_, other->one_rpc_per_update_);
  swap(adaptive_rate_control_, other->adaptive_rate_control_);
  swap(blocking_recv_, other->blocking_recv_);
  swap(recv_timeout_, other->recv_timeout_);
  swap(time_per_rpc_update_, other->time_per_rpc_update_);
  swap(poll_time_per_rpc_update_, other->poll_time_per_rpc_update_);
  swap(exec_time_per_rpc_update_, other->exec_time_per_rpc_update_);
  swap(stream_rpcs_, other->stream_rpcs_);
  swap(stream_rpcs_executed_, other->stream_rpcs_executed_);
  swap(stream_rpc_rate_, other->stream_rpc_rate_);
  swap(time_per_stream_update_, other->time_per_stream_update_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiplexedRequest::InitAsDefaultInstance() {
  ::krpc::schema::_MultiplexedRequest_default_instance_._instance.get_mutable()->connection_request_ = const_cast< ::krpc::schema::ConnectionRequest*>(
      ::krpc::schema::ConnectionRequest::internal_default_instance());
  ::krpc::schema::_MultiplexedRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::krpc::schema::Request*>(
      ::krpc::schema::Request::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiplexedRequest::kConnectionRequestFieldNumber;
const int MultiplexedRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiplexedRequest::MultiplexedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_MultiplexedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.MultiplexedRequest)
}
MultiplexedRequest::MultiplexedRequest(const MultiplexedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connection_request()) {
    connection_request_ = new ::krpc::schema::ConnectionRequest(*from.connection_request_);
  } else {
    connection_request_ = NULL;
  }
  if (from.has_request()) {
    request_ = new ::krpc::schema::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.MultiplexedRequest)
}

void MultiplexedRequest::SharedCtor() {
  ::memset(&connection_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_) -
      reinterpret_cast<char*>(&connection_request_)) + sizeof(request_));
}

MultiplexedRequest::~MultiplexedRequest() {
  // @@protoc_insertion_point(destructor:krpc.schema.MultiplexedRequest)
  SharedDtor();
}

void MultiplexedRequest::SharedDtor() {
  if (this != internal_default_instance()) delete connection_request_;
  if (this != internal_default_instance()) delete request_;
}

void MultiplexedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MultiplexedRequest::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiplexedRequest& MultiplexedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_MultiplexedRequest.base);
  return *internal_default_instance();
}


void MultiplexedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.MultiplexedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && connection_request_ != NULL) {
    delete connection_request_;
  }
  connection_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool MultiplexedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.MultiplexedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.ConnectionRequest connection_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connection_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .krpc.schema.Request request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.MultiplexedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.MultiplexedRequest)
  return false;
#undef DO_
}

void MultiplexedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.MultiplexedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionRequest connection_request = 1;
  if (this->has_connection_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_connection_request(), output);
  }

  // .krpc.schema.Request request = 2;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.MultiplexedRequest)
}

::google::protobuf::uint8* MultiplexedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.MultiplexedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.ConnectionRequest connection_request = 1;
  if (this->has_connection_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_connection_request(), deterministic, target);
  }

  // .krpc.schema.Request request = 2;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.MultiplexedRequest)
  return target;
}

size_t MultiplexedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.MultiplexedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .krpc.schema.ConnectionRequest connection_request = 1;
  if (this->has_connection_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connection_request_);
  }

  // .krpc.schema.Request request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiplexedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.MultiplexedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiplexedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiplexedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.MultiplexedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.MultiplexedRequest)
    MergeFrom(*source);
  }
}

void MultiplexedRequest::MergeFrom(const MultiplexedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.MultiplexedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_connection_request()) {
    mutable_connection_request()->::krpc::schema::ConnectionRequest::MergeFrom(from.connection_request());
  }
  if (from.has_request()) {
    mutable_request()->::krpc::schema::Request::MergeFrom(from.request());
  }
}

void MultiplexedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.MultiplexedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiplexedRequest::CopyFrom(const MultiplexedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.MultiplexedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiplexedRequest::IsInitialized() const {
  return true;
}

void MultiplexedRequest::Swap(MultiplexedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiplexedRequest::InternalSwap(MultiplexedRequest* other) {
  using std::swap;
  swap(connection_request_, other->connection_request_);
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MultiplexedRequest::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiplexedResponse::InitAsDefaultInstance() {
  ::krpc::schema::_MultiplexedResponse_default_instance_._instance.get_mutable()->response_ = const_cast< ::krpc::schema::Response*>(
      ::krpc::schema::Response::internal_default_instance());
  ::krpc::schema::_MultiplexedResponse_default_instance_._instance.get_mutable()->stream_update_ = const_cast< ::krpc::schema::StreamUpdate*>(
      ::krpc::schema::StreamUpdate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiplexedResponse::kResponseFieldNumber;
const int MultiplexedResponse::kStreamUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiplexedResponse::MultiplexedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2fkrpc_2eproto::scc_info_MultiplexedResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:krpc.schema.MultiplexedResponse)
}
MultiplexedResponse::MultiplexedResponse(const MultiplexedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_response()) {
    response_ = new ::krpc::schema::Response(*from.response_);
  } else {
    response_ = NULL;
  }
  if (from.has_stream_update()) {
    stream_update_ = new ::krpc::schema::StreamUpdate(*from.stream_update_);
  } else {
    stream_update_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:krpc.schema.MultiplexedResponse)
}

void MultiplexedResponse::SharedCtor() {
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stream_update_) -
      reinterpret_cast<char*>(&response_)) + sizeof(stream_update_));
}

MultiplexedResponse::~MultiplexedResponse() {
  // @@protoc_insertion_point(destructor:krpc.schema.MultiplexedResponse)
  SharedDtor();
}

void MultiplexedResponse::SharedDtor() {
  if (this != internal_default_instance()) delete response_;
  if (this != internal_default_instance()) delete stream_update_;
}

void MultiplexedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MultiplexedResponse::descriptor() {
  ::protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiplexedResponse& MultiplexedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2fkrpc_2eproto::scc_info_MultiplexedResponse.base);
  return *internal_default_instance();
}


void MultiplexedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:krpc.schema.MultiplexedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && response_ != NULL) {
    delete response_;
  }
  response_ = NULL;
  if (GetArenaNoVirtual() == NULL && stream_update_ != NULL) {
    delete stream_update_;
  }
  stream_update_ = NULL;
  _internal_metadata_.Clear();
}

bool MultiplexedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:krpc.schema.MultiplexedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .krpc.schema.Response response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .krpc.schema.StreamUpdate stream_update = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stream_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:krpc.schema.MultiplexedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:krpc.schema.MultiplexedResponse)
  return false;
#undef DO_
}

void MultiplexedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:krpc.schema.MultiplexedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Response response = 1;
  if (this->has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_response(), output);
  }

  // .krpc.schema.StreamUpdate stream_update = 2;
  if (this->has_stream_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_stream_update(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:krpc.schema.MultiplexedResponse)
}

::google::protobuf::uint8* MultiplexedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:krpc.schema.MultiplexedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .krpc.schema.Response response = 1;
  if (this->has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_response(), deterministic, target);
  }

  // .krpc.schema.StreamUpdate stream_update = 2;
  if (this->has_stream_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_stream_update(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:krpc.schema.MultiplexedResponse)
  return target;
}

size_t MultiplexedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:krpc.schema.MultiplexedResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .krpc.schema.Response response = 1;
  if (this->has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // .krpc.schema.StreamUpdate stream_update = 2;
  if (this->has_stream_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stream_update_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiplexedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:krpc.schema.MultiplexedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiplexedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiplexedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:krpc.schema.MultiplexedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:krpc.schema.MultiplexedResponse)
    MergeFrom(*source);
  }
}

void MultiplexedResponse::MergeFrom(const MultiplexedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:krpc.schema.MultiplexedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_response()) {
    mutable_response()->::krpc::schema::Response::MergeFrom(from.response());
  }
  if (from.has_stream_update()) {
    mutable_stream_update()->::krpc::schema::StreamUpdate::MergeFrom(from.stream_update());
  }
}

void MultiplexedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:krpc.schema.MultiplexedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiplexedResponse::CopyFrom(const MultiplexedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:krpc.schema.MultiplexedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiplexedResponse::IsInitialized() const {
  return true;
}

void MultiplexedResponse::Swap(MultiplexedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiplexedResponse::InternalSwap(MultiplexedResponse* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(stream_update_, other->stream_update_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MultiplexedResponse::GetMetadata() const {
  protobuf_protobuf_2fkrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2fkrpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace schema
}  // namespace krpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::ConnectionRequest* Arena::CreateMaybeMessage< ::krpc::schema::ConnectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::ConnectionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::ConnectionResponse* Arena::CreateMaybeMessage< ::krpc::schema::ConnectionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::ConnectionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Request* Arena::CreateMaybeMessage< ::krpc::schema::Request >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::ProcedureCall* Arena::CreateMaybeMessage< ::krpc::schema::ProcedureCall >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::ProcedureCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Argument* Arena::CreateMaybeMessage< ::krpc::schema::Argument >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Argument >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Response* Arena::CreateMaybeMessage< ::krpc::schema::Response >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::ProcedureResult* Arena::CreateMaybeMessage< ::krpc::schema::ProcedureResult >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::ProcedureResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Error* Arena::CreateMaybeMessage< ::krpc::schema::Error >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::StreamUpdate* Arena::CreateMaybeMessage< ::krpc::schema::StreamUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::StreamUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::StreamResult* Arena::CreateMaybeMessage< ::krpc::schema::StreamResult >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::StreamResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Services* Arena::CreateMaybeMessage< ::krpc::schema::Services >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Services >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Service* Arena::CreateMaybeMessage< ::krpc::schema::Service >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Service >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Procedure* Arena::CreateMaybeMessage< ::krpc::schema::Procedure >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Procedure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Parameter* Arena::CreateMaybeMessage< ::krpc::schema::Parameter >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Class* Arena::CreateMaybeMessage< ::krpc::schema::Class >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Class >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Enumeration* Arena::CreateMaybeMessage< ::krpc::schema::Enumeration >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Enumeration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::EnumerationValue* Arena::CreateMaybeMessage< ::krpc::schema::EnumerationValue >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::EnumerationValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Exception* Arena::CreateMaybeMessage< ::krpc::schema::Exception >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Exception >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Type* Arena::CreateMaybeMessage< ::krpc::schema::Type >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Tuple* Arena::CreateMaybeMessage< ::krpc::schema::Tuple >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Tuple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::List* Arena::CreateMaybeMessage< ::krpc::schema::List >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Set* Arena::CreateMaybeMessage< ::krpc::schema::Set >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Set >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Dictionary* Arena::CreateMaybeMessage< ::krpc::schema::Dictionary >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Dictionary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::DictionaryEntry* Arena::CreateMaybeMessage< ::krpc::schema::DictionaryEntry >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::DictionaryEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Stream* Arena::CreateMaybeMessage< ::krpc::schema::Stream >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Stream >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Event* Arena::CreateMaybeMessage< ::krpc::schema::Event >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::Status* Arena::CreateMaybeMessage< ::krpc::schema::Status >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::MultiplexedRequest* Arena::CreateMaybeMessage< ::krpc::schema::MultiplexedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::MultiplexedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::krpc::schema::MultiplexedResponse* Arena::CreateMaybeMessage< ::krpc::schema::MultiplexedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::krpc::schema::MultiplexedResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
